// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pokedex.Infrastructure.Persistence.Contexts;

#nullable disable

namespace Pokedex.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppliContext))]
    [Migration("20230203185238_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Pokedex.Core.Domain.Entities.Pokemon", b =>
                {
                    b.Property<int>("idpoke")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idpoke"), 1L, 1);

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idRegion")
                        .HasColumnType("int");

                    b.Property<int>("idtipo")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("subtipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idpoke");

                    b.HasIndex("idRegion");

                    b.HasIndex("idtipo");

                    b.ToTable("Pokemones", (string)null);
                });

            modelBuilder.Entity("Pokedex.Core.Domain.Entities.Region", b =>
                {
                    b.Property<int>("idregion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idregion"), 1L, 1);

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regionName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("idregion");

                    b.ToTable("Regiones", (string)null);
                });

            modelBuilder.Entity("Pokedex.Core.Domain.Entities.Tipo", b =>
                {
                    b.Property<int>("idtipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idtipo"), 1L, 1);

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("idtipo");

                    b.ToTable("Tipos", (string)null);
                });

            modelBuilder.Entity("Pokedex.Core.Domain.Entities.Pokemon", b =>
                {
                    b.HasOne("Pokedex.Core.Domain.Entities.Region", "Region")
                        .WithMany("Pokemons")
                        .HasForeignKey("idRegion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pokedex.Core.Domain.Entities.Tipo", "Tipo")
                        .WithMany("Pokemons")
                        .HasForeignKey("idtipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Pokedex.Core.Domain.Entities.Region", b =>
                {
                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("Pokedex.Core.Domain.Entities.Tipo", b =>
                {
                    b.Navigation("Pokemons");
                });
#pragma warning restore 612, 618
        }
    }
}
